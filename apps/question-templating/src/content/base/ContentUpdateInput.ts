/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, IsEnum, ValidateNested } from "class-validator";
import { EnumContentContentType } from "./EnumContentContentType";
import { LanguageWhereUniqueInput } from "../../language/base/LanguageWhereUniqueInput";
import { Type } from "class-transformer";
import { TemplateUpdateManyWithoutContentsInput } from "./TemplateUpdateManyWithoutContentsInput";
import { EnumContentStatus } from "./EnumContentStatus";

@InputType()
class ContentUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  audioLink?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  content?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumContentContentType,
  })
  @IsEnum(EnumContentContentType)
  @IsOptional()
  @Field(() => EnumContentContentType, {
    nullable: true,
  })
  contentType?: "Audio" | "Text" | "Html";

  @ApiProperty({
    required: false,
    type: () => LanguageWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LanguageWhereUniqueInput)
  @IsOptional()
  @Field(() => LanguageWhereUniqueInput, {
    nullable: true,
  })
  language?: LanguageWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => TemplateUpdateManyWithoutContentsInput,
  })
  @ValidateNested()
  @Type(() => TemplateUpdateManyWithoutContentsInput)
  @IsOptional()
  @Field(() => TemplateUpdateManyWithoutContentsInput, {
    nullable: true,
  })
  questionTemplates?: TemplateUpdateManyWithoutContentsInput;

  @ApiProperty({
    required: false,
    enum: EnumContentStatus,
  })
  @IsEnum(EnumContentStatus)
  @IsOptional()
  @Field(() => EnumContentStatus, {
    nullable: true,
  })
  status?: "Active" | "Inactive" | "Locked" | "Deleted" | "Archived";
}

export { ContentUpdateInput as ContentUpdateInput };
